{"version":3,"sources":["../../src/downloader/index.js"],"names":["startDownload","locations","threads","timeout","headers","throttleRate","meta$","url","headUrl","savePath","saveDir","requestsAndMeta$","threadPositions$","downloadProgressInfo$","module","exports","killFiles","sudPath"],"mappings":";;AAAA;;AACA;;AAEA,SAASA,aAAT,CAAuBC,SAAvB,EAAiH;AAAA,iFAAJ,EAAI;AAAA,0BAA7EC,OAA6E;AAAA,MAA7EA,OAA6E,6BAAnE,CAAmE;AAAA,0BAAhEC,OAAgE;AAAA,MAAhEA,OAAgE,6BAAtD,IAAE,EAAF,GAAK,IAAiD;AAAA,0BAA3CC,OAA2C;AAAA,MAA3CA,OAA2C,6BAAjC,IAAiC;AAAA,+BAA3BC,YAA2B;AAAA,MAA3BA,YAA2B,kCAAZ,GAAY;;AAEhH,MAAIC,KAAJ;;AAEA,MAAG,OAAOL,SAAP,IAAoB,QAApB,IAAgC,qBAAUA,SAAV,CAAnC,EAAyD;AAExD;AACAK,IAAAA,KAAK,GAAG,wBAAaL,SAAb,CAAR;AAEA,GALD,MAKO,IAAG,OAAOA,SAAP,IAAoB,QAAvB,EAAiC;AAEvC;AACAK,IAAAA,KAAK,GAAG,uBAAYL,SAAZ,EAAuBC,OAAvB,CAAR;AAEA,GALM,MAKA;AAEN;AACA;AAHM,QAIAK,GAJA,GAIoCN,SAJpC,CAIAM,GAJA;AAAA,QAIKC,OAJL,GAIoCP,SAJpC,CAIKO,OAJL;AAAA,QAIcC,QAJd,GAIoCR,SAJpC,CAIcQ,QAJd;AAAA,QAIwBC,OAJxB,GAIoCT,SAJpC,CAIwBS,OAJxB;AAKN,QAAG,CAACF,OAAJ,EAAaA,OAAO,GAAGD,GAAV;AACbD,IAAAA,KAAK,GAAG,uBAAYC,GAAZ,EAAiBC,OAAjB,EAA0BN,OAA1B,EAAmCO,QAAnC,EAA6CC,OAA7C,CAAR;AAEA;;AAED,MAAIC,gBAAgB,GAAG,wBAAaL,KAAb,EAAoB;AAAEH,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,OAAO,EAAPA;AAAX,GAApB,CAAvB;AAEA,MAAIQ,gBAAgB,GAAG,8BAAmBD,gBAAnB,CAAvB;AAEA,MAAIE,qBAAqB,GAAG,mCAAwBD,gBAAxB,EAA0CP,YAA1C,CAA5B,CA5BgH,CA8BhH;;AACA,SAAOQ,qBAAP;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAChBf,EAAAA,aAAa,EAAbA,aADgB;AAEhBgB,EAAAA,SAAS,EAATA,eAFgB;AAGhBC,EAAAA,OAAO,EAAPA;AAHgB,CAAjB","sourcesContent":["import { getMetadata, makeRequests, getThreadPositions, getDownloadProgressInfo, readMetadata } from './core'\nimport { killFiles, sudPath, isSudPath } from './util'\n\nfunction startDownload(locations, { threads = 4, timeout = 3*60*1000, headers = null, throttleRate = 500 } = {}) {\n\n\tvar meta$\n\n\tif(typeof locations == 'string' && isSudPath(locations)) {\n\n\t\t//resuming download\n\t\tmeta$ = readMetadata(locations)\n\n\t} else if(typeof locations == 'string') {\n\n\t\t//starting new download without save path or save dir\n\t\tmeta$ = getMetadata(locations, threads)\n\n\t} else {\n\n\t\t//starting new download with save path\n\t\t//only one of savePath and saveDir should be defined, however, neither of them need to be defined\n\t\tvar { url, headUrl, savePath, saveDir } = locations\n\t\tif(!headUrl) headUrl = url;\n\t\tmeta$ = getMetadata(url, headUrl, threads, savePath, saveDir)\n\n\t}\n\n\tvar requestsAndMeta$ = makeRequests(meta$, { timeout, headers })\n\n\tvar threadPositions$ = getThreadPositions(requestsAndMeta$)\n\n\tvar downloadProgressInfo$ = getDownloadProgressInfo(threadPositions$, throttleRate)\n\n\t//the first value emitted is the meta data object\n\treturn downloadProgressInfo$\n}\n\nmodule.exports = {\n\tstartDownload,\n\tkillFiles,\n\tsudPath\n}"],"file":"index.js"}